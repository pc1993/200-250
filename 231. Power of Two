如果一个数是2的次方数的话，根据上面分析，那么它的二进数必然是最高位为1，其它都为0，
那么如果此时我们减1的话，则最高位会降一位，其余为0的位现在都为变为1，那么我们把两数相与，就会得到0
class Solution {
public:
    bool isPowerOfTwo(int n) {
        return (n>0)&&(!(n&(n-1)));
    }
};


2的次方数都只有一个1，剩下的都是0，所以我们的解题思路就有了，我们只要每次判断最低位是否为1，然后向右移位，最后统计1的个数即可判断是否是2的次方数
class Solution {
public:
    bool isPowerOfTwo(int n) {
        int count=0;
        while(n>0)
        {
            count+=(n&1);
            n>>=1;
        }
        return count==1;
    }
};
