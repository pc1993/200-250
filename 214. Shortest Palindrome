http://blog.csdn.net/l953972252/article/details/51331001，介绍四种算法
暴力算法BF(Brute Force)，依次匹配，如果不符合，那么舍弃漆面的部分，继续匹配后面的字符
BM(Boyer Moore)算法，移动匹配了的x位，比较m-x位是否匹配，若匹配，再回来比较剩下的位数
Sunday算法的核心思想就是失配时，模式串能尽可能多的向后移动，使得匹配次数减少，效率提高
KPM算法，每次移动位位置，是不匹配位置的j-next【j】（当前位置，最大前缀后缀相同的字符串长度）

https://leetcode.com/problems/shortest-palindrome/discuss/60113
class Solution {
public:
    string shortestPalindrome(string s) {
        string rev_s = s;
        reverse(rev_s.begin(), rev_s.end());
        string l = s + "#" + rev_s;
        
        vector<int> p(l.size(), 0);
        for (int i = 1; i < l.size(); i++) {
            int j = p[i - 1];
            while (j > 0 && l[i] != l[j])
                j = p[j - 1];
            p[i] = (j += l[i] == l[j]);
        }
        
        return rev_s.substr(0, s.size() - p[l.size() - 1]) + s;
    }
};
