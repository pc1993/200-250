https://leetcode.com/problems/kth-largest-element-in-an-array/discuss/60309
类似于快排的思想，比pivot小的在左边，大的在右边，比较pivot和k的大小
class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        int left=0;
        int right=nums.size()-1;
        while(true)
        {
            int pos=findmypos(nums,left,right);
            if(pos==k-1)
            {
                return nums[k-1];
            }
            else if(pos<k-1)
            {
                left=pos+1;
            }
            else
            {
                right=pos-1;
            }
        }
    }
private:
    int findmypos(vector<int>& nums,int left,int right)
        {
            int pivot=nums[left];
            int l=left+1;
            int r=right;
            while(l<=r)
            {
                if(nums[l]<pivot&&nums[r]>pivot)
                    swap(nums[l++],nums[r--]);
                if(nums[l]>=pivot)
                    l++;
                if(nums[r]<=pivot)
                    r--;
            }
            swap(nums[left],nums[r]);
            return r;
        }
};
