/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(!head||!head->next)
            return true;
        ListNode* slow=head;
        ListNode* fast=head;
        while(fast->next&&fast->next->next)
        {
            fast=fast->next->next;
            slow=slow->next;
        }
        slow->next=myreverse(slow->next);
        slow=slow->next;
        while(slow)
        {
            if(slow->val!=head->val)
                return false;
            slow=slow->next;
            head=head->next;
        }
        return true;
    }
private:
    ListNode* myreverse(ListNode* head)
    {
        ListNode* res=NULL;
        ListNode* tmp=NULL;
        while(head)
        {
            tmp=head->next;
            head->next=res;
            res=head;
            head=tmp;
        }
        return res;
    }
};
