class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n=nums.size();
        vector<int> left(n);
        vector<int> right(n);
        vector<int> res(n);
        left[0]=1;
        right[0]=1;
        for(int i=1;i<n;++i)
        {
            left[i]=left[i-1]*nums[i-1];
            right[i]=right[i-1]*nums[n-i];
        }
        for(int i=0;i<n;++i)
        {
            res[i]=left[i]*right[n-i-1];
        }
        return res;
    }
};



class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n=nums.size();
        int fromBegin=1;
        int fromLast=1;
        vector<int> res(n,1);
        
        for(int i=0;i<n;i++){
            res[i]*=fromBegin;
            fromBegin*=nums[i];
            res[n-1-i]*=fromLast;
            fromLast*=nums[n-1-i];
        }
        return res;
    }
};
